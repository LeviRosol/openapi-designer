{
  "blank": "",
  "nav": {
    "tab": {
      "about": "About",
      "header": "Header",
      "mime": "MIME types",
      "security": "Security",
      "tags": "Tags",
      "paths": "Paths",
      "definitions": "Definitions",
      "output-editor": "Editable output",
      "rich-preview": "Rich preview"
    },
    "actions": {
      "split": {
        "editor": "Editor only",
        "split": "Editor & Preview",
        "output": "Editable output",
        "preview": "Rich preview"
      },
      "delete": "Delete data",
      "download": {
        "json": "JSON",
        "yaml": "YAML"
      }
    }
  },
  "output-editor": {
    "save": "Save changes"
  },
  "space": {
    "title": {
      "upload": "Upload",
      "publish": "Publish",
      "logout": "Logout"
    },
    "upload-complete": {
      "title": "Upload complete",
      "clickhere": "Click here to open the uploaded document.",
      "uploaded-has-been": "{{title}} v{{version}} has been ",
      "updated": "$t(space.upload-complete.uploaded-has-been) updated in OpenAPI space.\n\n$t(space.upload-complete.clickhere)",
      "created": "$t(space.upload-complete.uploaded-has-been) added to OpenAPI space.\n\n$t(space.upload-complete.clickhere)",
      "unknown": "$t(space.upload-complete.uploaded-has-been) uploaded to OpenAPI space.\n\n$t(space.upload-complete.clickhere)"
    },
    "upload-failed": {
      "title": "Upload failed",
      "invalid-document": "Invalid Swagger document",
      "access-denied": "Access denied",
      "version-published": "Can't edit published API",
      "unknown": "Unknown error: HTTP {{status}}",
      "missing-title": "The API must have a title in order to upload to OpenAPI space."
    },
    "publish-complete": {
      "title": "Published",
      "published": "{{title}} v{{version}} has been published",
      "unknown": "{{title}}Â v{{version}} has been propably published"
    },
    "publish-failed": {
      "title": "Publishing failed",
      "access-denied": "Access denied",
      "not-found": "specified API not found",
      "allready-published": "the API version is allready published",
      "unknown": "Unknown error: HTTP {{status}}"
    }
  },
  "notify": {
    "import-complete": {
      "title": "Import complete",
      "body": "{{title}} v{{version}} has been imported into the designer."
    },
    "import-failed": {
      "title": "Import failed",
      "body": "Failed to import document: {{error}}"
    },
    "editor-import-complete": {
      "title": "Edited output saved",
      "body": "You changes to the output editor have been saved."
    },
    "delete": {
      "title": "Document deleted",
      "body": "The data in the editor has been deleted.\n\nClick here to recover."
    },
    "space-login-failed": {
      "title": "Login failed",
      "incorrect-username": "Incorrect username.",
      "incorrect-password": "Incorrect password.",
      "unknown-error": "Unknown error: HTTP {{status}}"
    },
    "space-login-success": {
      "title": "Login successful",
      "body": "Logged in as {{username}}."
    },
    "space-register-failed": {
      "title": "Register failed",
      "username-or-email-taken": "Username or Email taken.",
      "unknown-error": "Unknown error: HTTP {{status}}"
    },
    "space-register-success": {
      "title": "Register successful",
      "body": "Logged in as {{username}}."
    },
    "space-logout-success": {
      "title": "Logged out",
      "body": "You have logged out."
    },
    "space-logout-failed": {
      "title": "logout failed",
      "user-was-not-logged-in": "You have not logged in.",
      "unknown-error": "Unknown error: HTTP {{status}}"
    }
  },
  "confirm": {
    "delete": {
      "title": "Confirm deletion",
      "body": "Are you sure you want to delete ALL data?"
    }
  },
  "modal": {
    "validation-error": {
      "title": "Validation errors detected!",
      "cancel": "Cancel",
      "download-anyway": "Download anyway",
      "show-rich-preview-anyway": "Open preview anyway"
    },
    "space-login": {
      "title": "Log in to OpenAPI space",
      "username": "Enter username...",
      "password": "Enter password...",
      "cancel": "Cancel",
      "login": "Log in",
      "apinf": "Use APInf account",
      "space": "Use Space account",
      "title-suffix-apinf": "with APInf"
    },
    "space-register": {
      "title": "Register to OpenAPI space",
      "email": "Enter email...",
      "username": "Enter username...",
      "password": "Enter password...",
      "cancel": "Cancel",
      "register": "Register"
    }
  },
  "error": {
    "title": "Uh oh!",
    "body": "It seems like something is broken.\nSometimes these issues are caused by an invalid OpenAPI document in the cache. If this is the case, <a href='javascript:$oai.delete()'>deleting the data</a> should fix it.",
    "data-title": "Exception data"
  },
  "footer-product-of": "Product of",
  "validation": {
    "required-is-empty": "This field is required!",
    "key-is-required": "The key for this field is required!",
    "invalid-hostname": "Invalid hostname! Valid examples: example.com, api.example.com:8080",
    "invalid-email": "Invalid email! Valid example: john.smith@example.com",
    "invalid-http-status": "Invalid HTTP status code! Valid examples: default, 200",
    "param-not-implemented": "The path parameter {{parameter}} has not been implemented in HTTP {{method}}",
    "invalid-url": "Invalid URL! Valid example: http://example.com"
  },
  "form": {
    "global": {
      "placeholder": "Enter value...",
      "newItemText": "New {{label}}"
    },
    "externalDocs": {
      "label": "External documentation",
      "description": {
        "label": "Description",
        "placeholder": "e.g. find out more about this API"
      },
      "url": {
        "label": "URL",
        "placeholder": "e.g. http://example.com/docs"
      }
    },
    "defaultValue": {
      "label": "Default value"
    },
    "supports-markdown": "This field supports formatting with Markdown.",
    "enum": {
      "label": "Allowed values",
      "item": {
        "label": "Allowed value",
        "string": {
          "label": "String"
        },
        "integer": {
          "label": "Integer"
        },
        "number": {
          "label": "number"
        },
        "boolean": {
          "label": "boolean"
        },
        "array": {
          "label": "Array"
        }
      }
    },
    "paths": {
      "label": "Paths",
      "newItemText": "New Path",
      "item": {
        "label": "Path #{{index}}: {{-path}}",
        "operation": {
          "label": "Path",
          "methods": {
            "get": "GET",
            "put": "PUT",
            "post": "POST",
            "delete": "DELETE",
            "options": "OPTIONS",
            "head": "HEAD",
            "patch": "PATCH"
          },
          "operationId": {
            "label": "Operation ID",
            "placeholder": "Enter an unique identifier for this operation."
          },
          "summary": {
            "label": "Summary",
            "placeholder": "Enter a short summary for what the operation does."
          },
          "description": {
            "label": "Description",
            "placeholder": "Enter a thorough description of the operation here."
          },
          "deprecated": {
            "label": "Deprecated?"
          },
          "overrides": {
            "label": "Overrides",
            "schemes": {
              "label": "Protocols"
            }
          },
          "tags": {
            "label": "Tags",
            "newItemText": "New Tag",
            "item": {
              "label": "Tag #{{index}}"
            }
          },
          "responses": {
            "label": "Responses",
            "newItemText": "New Response"
          },
          "parameters": {
            "label": "Params",
            "newItemText": "New Parameter"
          }
        },
        "reference": {
          "label": "Target",
          "optionLabel": "Reference",
          "choices": {
            "choose": "Choose a target type..."
          }
        }
      }
    },
    "global-security": {
      "label": "Security",
      "definitions": {
        "label": "Definitions",
        "newItemText": "New Security Definition",
        "item": {
          "label": "Security Definition #{{index}}",
          "basic": {
            "label": "Basic",
            "description": {
              "label": "Description",
              "placeholder": "Describe the security scheme here."
            }
          },
          "apiKey": {
            "label": "API key",
            "description": {
              "label": "Description",
              "placeholder": "Describe the security scheme here."
            },
            "name": {
              "label": "Name",
              "placeholder": "e.g. api_key"
            },
            "in": {
              "label": "API key location",
              "choices": {
                "query": "Query",
                "header": "Header"
              }
            }
          },
          "oauth2": {
            "label": "OAuth2",
            "description": {
              "label": "Description",
              "placeholder": "Describe the security scheme here."
            },
            "flow": {
              "label": "Flow",
              "choices": {
                "implicit": "Implicit",
                "password": "Password",
                "application": "Application",
                "accessCode": "Access code"
              }
            },
            "authorizationUrl": {
              "label": "Authorization URL",
              "placeholder": "e.g. https://example.com/oauth/dialog"
            },
            "tokenUrl": {
              "label": "Token URL",
              "placeholder": "e.g. https://example.com/oauth/token"
            },
            "scopes": {
              "label": "Scopes",
              "newItemText": "New Scope",
              "item": {
                "label": "Scope #{{index}}",
                "key": {
                  "label": "Key",
                  "placeholder": "e.g. pets:read"
                },
                "description": {
                  "label": "Description",
                  "placeholder": "Describe e.g. what this OAuth2 scope grants access to."
                }
              }
            }
          }
        }
      },
      "requirements": {
        "label": "Requirements",
        "newItemText": "New Requirements Object",
        "item": {
          "label": "Requirements Object #{{index}}",
          "newItemText": "New Security Requirement",
          "item": {
            "label": "Security Requirement #{{index}}",
            "name": {
              "label": "Name",
              "choices": {
                "choose": "Choose a security definition..."
              }
            },
            "scopes": {
              "label": "Scopes",
              "helpText": "The scope names tell what scope names are required for the execution. Must be empty for non-oauth2 type security schemes.",
              "newItemText": "New OAuth2 Scope",
              "item": {
                "label": "OAuth2 scope #{{index}}",
                "placeholder": "e.g. pets:read"
              }
            }
          }
        }
      }
    },
    "tags": {
      "label": "Tag definitions",
      "newItemText": "New Tag",
      "item": {
        "label": "Tag #{{index}}: {{-name}}",
        "name": {
          "label": "Name",
          "placeholder": "e.g. user_operations"
        },
        "description": {
          "label": "Description",
          "placeholder": "Describe what kind of operations are tagged with this tag."
        }
      }
    },
    "mime": {
      "label": "MIME types",
      "consumes": {
        "label": "Consumes",
        "item": {
          "label": "MIME type",
          "placeholder": "e.g. application/json"
        }
      },
      "produces": {
        "label": "Produces",
        "item": {
          "label": "MIME type",
          "placeholder": "e.g. application/json"
        }
      }
    },
    "header": {
      "label": "Header",
      "info": {
        "label": "Basic info",
        "title": {
          "label": "Title",
          "placeholder": "e.g. Example API"
        },
        "version": {
          "label": "Version",
          "placeholder": "e.g. 1.0.0"
        },
        "description": {
          "label": "Description",
          "placeholder": "Enter a description of the API here."
        },
        "termsOfService": {
          "label": "Terms of Service",
          "placeholder": "e.g. http://example.com/terms/"
        },
        "contact": {
          "label": "Contact",
          "name": {
            "label": "Name",
            "placeholder": "e.g. John Smith"
          },
          "email": {
            "label": "Email",
            "placeholder": "e.g. johnsmith@example.com"
          },
          "url": {
            "label": "URL",
            "placeholder": "e.g. http://example.com/contact"
          }
        },
        "license": {
          "label": "License",
          "name": {
            "label": "Name",
            "placeholder": "e.g. MIT"
          },
          "url": {
            "label": "URL",
            "placeholder": "e.g. https://mit-license.org/"
          }
        }
      },
      "host": {
        "label": "Host settings",
        "host": {
          "label": "Hostname",
          "placeholder": "e.g. example.com"
        },
        "basePath": {
          "label": "Base path",
          "placeholder": "e.g. /api/v2",
          "helpText": "The base path that will be prepended to all other paths. Must start with a slash."
        },
        "schemes": {
          "label": "Default protocols",
          "choices": {
            "http": "HTTP",
            "https": "HTTPS",
            "ws": "Websocket",
            "wss": "Secure Websocket"
          }
        }
      }
    },
    "global-definitions": {
      "label": "Definitions",
      "parameters": {
        "label": "Parameters",
        "newItemText": "New Parameter",
        "item": {
          "label": "Parameter #{{index}}: {{-name}}"
        }
      },
      "responses": {
        "label": "Responses",
        "newItemText": "New Response",
        "item": {
          "label": "Response #{{index}}: {{-name}}"
        }
      }
    },
    "response": {
      "response": {
        "label": "Response"
      },
      "reference": {
        "label": "Reference"
      },
      "label": "Response #{{index}} for HTTP {{-httpStatus}}",
      "description": {
        "label": "Description",
        "placeholder": "Describe the response here."
      },
      "schema": {
        "label": "Response body"
      },
      "$ref": {
        "label": "Target",
        "choices": {
          "choose": "Choose a target Response..."
        }
      }
    },
    "parameter": {
      "parameter": {
        "label": "Parameter"
      },
      "reference": {
        "label": "Reference"
      },
      "label": "Parameter #{{index}}: {{-name}}",
      "$ref": {
        "label": "Target",
        "choices": {
          "choose": "Choose a target Parameter..."
        }
      },
      "name": {
        "label": "Name",
        "placeholder": "Enter name..."
      },
      "in": {
        "label": "Location",
        "choices": {
          "path": "Path",
          "query": "Query",
          "header": "Header",
          "formData": "Form data",
          "body": "Body"
        }
      },
      "description": {
        "label": "Description",
        "placeholder": "Describe the parameter here."
      },
      "required": {
        "label": "Required",
        "helpText": "Is this parameter required?",
        "choices": {
          "required": ""
        }
      },
      "allowEmptyValue": {
        "label": "Allow empty value?"
      },
      "type": {
        "label": "Type",
        "choices": {
          "string": "String",
          "integer": "Integer",
          "boolean": "Boolean",
          "number": "Number",
          "array": "Array",
          "file": "File"
        }
      },
      "items": {
        "label": "Array items"
      },
      "collectionFormat": {
        "label": "Collection format",
        "choices": {
          "csv": "CSV (foo,bar)",
          "ssv": "SSV (foo bar)",
          "tsv": "TSV (foo\\tbar)",
          "pipes": "Pipes (foo|bar)"
        }
      }
    },
    "types": {
      "label": "Types",
      "newItemText": "New Type",
      "allOf": {
        "label": "Joined types",
        "newItemText": "Join a new type",
        "item": {
          "label": "Joined type #{{-index}}"
        }
      },
      "item": {
        "label": "Type #{{index}}: {{-name}}",
        "x-oad-type": {
          "choices": {
            "choose": "Choose a type",
            "string": "String",
            "integer": "Integer",
            "boolean": "Boolean",
            "number": "Number",
            "array": "Array",
            "object": "Object",
            "reference": "Reference",
            "allOf": "Joined types",
            "null": "Null",
            "file": "File"
          }
        },
        "name": {
          "placeholder": "Enter key..."
        },
        "$ref": {
          "label": "Target",
          "choices": {
            "choose": "Choose a target type..."
          }
        },
        "title": {
          "label": "Title",
          "placeholder": "Enter title..."
        },
        "description": {
          "label": "Description",
          "placeholder": "Describe the type here."
        },
        "readOnly": {
          "label": "Read-only?",
          "helpText": "If checked, this property doesn't affect anything when sent from the client. Read-only fields should not be marked as required."
        },
        "items": {
          "label": "Array item"
        },
        "uniqueItems": {
          "label": "Require items to be unique?"
        },
        "additionalProperties": {
          "label": "Schema for additional properties"
        },
        "properties": {
          "label": "Properties",
          "item": {
            "label": "Property #{{index}}: {{-name}}"
          }
        },
        "required": {
          "label": "Required properties",
          "item": {
            "label": "Required properties",
            "choices": {
              "choose": "Choose a property..."
            }
          }
        },
        "format": {
          "label": "Format",
          "choices": {
            "int32": "32-bit integer",
            "int64": "64-bit integer",
            "float": "32-bit floating point",
            "double": "64-bit floating point",
            "string": "Plain string",
            "byte": "Byte (Base64)",
            "binary": "Binary (octet sequence)",
            "date": "Date",
            "date-time": "Date and Time",
            "password": "Password"
          }
        }
      }
    }
  }
}
